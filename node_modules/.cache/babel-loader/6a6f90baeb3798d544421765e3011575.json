{"ast":null,"code":"var _jsxFileName = \"/Users/pavelglazkov/Desktop/dev/mesto-react/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport Cards from \"./Cards\";\nimport { api } from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"H+uHrKdEz9PVJFmY5mEUX+TcWBM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/mesto-react/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","AddPlacePopup","EditAvatarPopup","EditProfilePopup","Cards","api","ImagePopup","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","cards","setCards","useEffect","getInitialCards","then","res","catch","err","console","error","closeAllPopups","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,qBAAD,EAAwBC,sBAAxB,IAAkDZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxD;AACA,QAAM,CAACC,sBAAD,EAAyBC,uBAAzB,IAAoDf,KAAK,CAACa,QAAN,CAAe,KAAf,CAA1D;AACA,QAAM,CAACG,mBAAD,EAAsBC,oBAAtB,IAA8CjB,KAAK,CAACa,QAAN,CAAe,KAAf,CAApD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBnB,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1B;AAEAb,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,GAAG,CAACa,eAAJ,GACKC,IADL,CACUC,GAAG,IAAI;AAACJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AAAc,KADhC,EAEKC,KAFL,CAEWC,GAAG,IAAI;AAACC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AAAmB,KAFtC;AAGD,GAJD,EAIG,EAJH;;AAMA,QAAMG,cAAc,GAAG,MAAM;AACzBhB,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAG,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAE,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAJD;;AAMA,QAAMY,sBAAsB,GAAG,MAAM;AACjCd,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAFD;;AAGA,QAAMe,mBAAmB,GAAG,MAAM;AAC9Bb,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAGA,WAASc,qBAAT,GAAgC;AAC5BnB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AACH,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AACI,QAAA,YAAY,EAAEmB,qBADlB;AAEI,QAAA,aAAa,EAAEF,sBAFnB;AAGI,QAAA,UAAU,EAAEC,mBAHhB;AAII,QAAA,KAAK,EAAEZ;AAJX;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEF,mBAAvB;AAA4C,QAAA,OAAO,EAAEY;AAArD;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,eAAD;AAAiB,QAAA,MAAM,EAAEjB,qBAAzB;AAAgD,QAAA,OAAO,EAAEiB;AAAzD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEd,sBAA1B;AAAkD,QAAA,OAAO,EAAEc;AAA3D;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAqBD;;GAjDQlB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport Cards from \"./Cards\";\nimport {api} from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([])\n\n    React.useEffect(() => {\n      api.getInitialCards()\n          .then(res => {setCards(res)})\n          .catch(err => {console.error(err)})\n    }, [])\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n    }\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    }\n    function handleEditAvatarClick(){\n        setEditAvatarPopupOpen(true)\n    }\n  return (\n      <>\n      <div className=\"page\">\n          <Header />\n          <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              cards={cards}\n\n          />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\n          <Footer />\n      </div>\n\n\n    </>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}