{"version":3,"sources":["images/mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","utils/api.js","utils/utils.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","link","name","type","length","Main","props","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","Footer","Date","getFullYear","PopupWithForm","overlayClick","isOpen","onClose","title","onSubmit","children","buttonText","AddPlacePopup","useState","setName","setLink","useEffect","handleButtonText","isLoading","e","overlay","target","preventDefault","onChangeLoading","value","onChange","placeholder","required","minLength","maxLength","id","EditAvatarPopup","onUpdateAvatar","inputAvatarRef","useRef","current","ref","EditProfilePopup","onUpdateUser","description","setDescription","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponse","data","method","body","JSON","stringify","cardId","authorization","ImagePopup","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","setCards","selectedCard","setSelectedCard","isImagePopupOpen","setImagePopupOpen","setCurrentUser","setIsLoading","changeLoading","getUserInfo","catch","err","console","error","getInitialCards","closeAllPopups","classList","contains","window","addEventListener","key","Provider","changeLikeCardStatus","newCard","state","c","deleteCard","filter","setCardServer","finally","changeAvatar","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96277c87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto.5f3664ca.svg\";","import React from \"react\";\nimport logo from \"../images/mesto.svg\";\n\nfunction Header() {\n    return(\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"Место\" />\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }){\n\n  const currentUser = React.useContext(CurrentUserContext)\n\n  function handleClick() {\n    onCardClick(card)\n  }\n\n  function handleLikeClick() {\n    onCardLike(card)\n  }\n  function handleDeleteClick() {\n    onCardDelete(card)\n  }\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n      `element__trash ${isOwn ? '' : 'element__trash_hidden'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n      `element__description-like ${isLiked ? 'element__description-like_active' : ' '}`\n  );\n\n  return(\n\n        <li className=\"element__container\">\n          <div className=\"element__foto-container\">\n            <img className=\"element__foto\" onClick={handleClick} src={card.link} alt={card.name} />\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n          </div>\n          <div className=\"element__description\">\n            <h2 className=\"element__description-text\">{card.name}</h2>\n            <div className=\"element__container-like\">\n              <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\"></button>\n              <span className=\"element__likes\">{card.likes.length}</span>\n            </div>\n          </div>\n        </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main(props){\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return(\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__foto-container\" onClick={props.onEditAvatar}>\n                    <button className=\"profile__foto-edit\"></button>\n                    <img className=\"profile__foto\" alt={currentUser.name} src={currentUser.avatar}  />\n                </div>\n                <div className=\"profile__container-text\">\n                    <h1 className=\"profile__title\">{currentUser.name}</h1>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__button-edit\" type=\"button\" onClick={props.onEditProfile}></button>\n                <button className=\"profile__button-add\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n\n            <section className=\"element\">\n                <ul className=\"element__grid\">\n                  {props.cards.map(card =>(\n                      <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n\n                      />\n                  ))}\n\n                </ul>\n            </section>\n        </main>\n    )\n}\n\nexport default Main;","function Footer(){\n\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    )\n}\nexport default Footer;","import React from \"react\";\n\nfunction PopupWithForm(props){\n    return(\n        <div onClick={props.overlayClick} className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n                <h2 className=\"popup__heading\">{`${props.title}`}</h2>\n                <form className=\"popup__form form\" onSubmit={props.onSubmit} name=\"form\" type=\"form\">\n                    {props.children}\n\n                    <button className=\"popup__save\" type=\"submit\">{`${props.buttonText}`}</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props){\n\n  const [name, setName] = React.useState('')\n  const [link, setLink] = React.useState('')\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleLinkChange(e) {\n    setLink(e.target.value)\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n  }, [props.isOpen]);\n\n  function handleSubmit(e){\n    e.preventDefault()\n    props.onChangeLoading();\n    props.onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  function overlayClick(e){\n    props.overlay(e.target)\n  }\n\n  const handleButtonText = (`${props.isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n    return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={props.isOpen} onClose={props.onClose} name=\"add\" title=\"Новое место\" buttonText={handleButtonText}>\n          <input className=\"popup__item popup__item_title_add\" value={name}\n                 onChange={handleNameChange} type=\"text\" name=\"name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n            <span className=\"text-input-name-error popup__input-error\"></span>\n            <input className=\"popup__item popup__item_type_job\" id=\"text-input-job\" value={link} onChange={handleLinkChange}\n                   type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required minLength=\"2\" maxLength=\"200\" />\n            <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, overlay, isLoading, onChangeLoading}){\n  const inputAvatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateAvatar({\n      avatar: inputAvatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"avatar\" title=\"Обновить аватар\" buttonText={handleButtonText}>\n            <input ref={inputAvatarRef} className=\"popup__item popup__item_type_foto\" id=\"url-inputAvatar\"\n                   type=\"url\" name=\"link\" placeholder=\"Ссылка на фото\" required />\n                <span className=\"url-inputAvatar-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, overlay, isLoading, onChangeLoading}){\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' ');\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value)\n  }\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"profile\" title=\"Редактировать профиль\" buttonText={handleButtonText}>\n            <input className=\"popup__item popup__item_type_name\" value={name || ''} onChange={handleNameChange}\n                   id=\"text-input-name\" type=\"text\"\n                   placeholder=\"Ваше имя\" required minLength=\"2\" maxLength=\"40\" />\n                <span className=\"text-input-name-error popup__input-error\"></span>\n                <input className=\"popup__item popup__item_type_job\" value={description || ''} onChange={handleDescriptionChange}\n                       id=\"text-input-job\" type=\"text\"\n                       placeholder=\"Ваше призвание\" required minLength=\"2\" maxLength=\"200\" />\n                    <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import {config} from \"./utils\";\nclass Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _getResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    setUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponse)\n    }\n\n    setCardServer(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponse)\n    }\n\n  changeLikeCardStatus(cardId, isLiked) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: isLiked ? 'PUT' : 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n\n    changeAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._getResponse)\n    }\n}\n\nconst api = new Api(config);\nexport default api;","\nexport const config = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n        authorization: 'df3e4aab-6899-4784-852c-de3c6ef6b3bc',\n        'Content-Type': 'application/json'\n    }\n};\n","import React from \"react\";\n\nfunction ImagePopup({isOpen, onClose, card, overlay}){\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n    return(\n        <div onClick={overlayClick} className={`popup popup_type_preview ${isOpen && 'popup_opened'}`}>\n            <div className=\"popup__preview-container\">\n                <span className=\"popup__close popup__close_type_preview\" onClick={onClose}></span>\n                <img className=\"popup__preview-img\" src={card.link} alt={card.name} />\n                <p className=\"popup__preview-subtitle\">{card.name}</p>\n            </div>\n        </div>\n    )\n}\nexport default ImagePopup;","import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([])\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    const changeLoading = () =>{\n      setIsLoading(true)\n  }\n\n    React.useEffect(() => {\n      api.getUserInfo()\n          .then(res => {setCurrentUser(res)})\n          .catch(err => {console.error(err)})\n    }, [])\n\n    React.useEffect(() => {\n      api.getInitialCards()\n          .then(res => {setCards(res)})\n          .catch(err => {console.error(err)})\n    }, [])\n\n    const handleCardClick = (data) => {\n      setImagePopupOpen(true)\n      setSelectedCard(data)\n    }\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n    }\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    }\n    function handleEditAvatarClick(){\n        setEditAvatarPopupOpen(true)\n    }\n    //Меняет информацию о пользователе\n    const handleUpdateUser = (data) => {\n      api.setUserInfo(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Меняет аватар\n    const handleUpdateAvatar = (data) => {\n      api.changeAvatar(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Добавление новой карточки\n    const handleAddPlaceSubmit = (newCard) => {\n      api.setCardServer(newCard)\n          .then((res) => {\n            setCards([res, ...cards]);\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  function handleCardDelete(card){\n    api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    })\n  },[])\n\n  function overlayClick(e) {\n      if (e.classList.contains('popup')){\n        closeAllPopups()\n      }\n  }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n          <Header />\n          <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n              setCards={setCards}\n\n          />\n          <AddPlacePopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onAddPlace={handleAddPlaceSubmit}\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n          />\n          <EditAvatarPopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onUpdateAvatar={handleUpdateAvatar}\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n          />\n          <EditProfilePopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onUpdateUser={handleUpdateUser}\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n          />\n          <ImagePopup overlay={overlayClick} isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\n          <Footer />\n      </div>\n      </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}